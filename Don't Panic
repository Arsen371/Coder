//URL:https://www.codingame.com/contests/dont-panic

using System;

class Player
{
    static void Main(string[] args)
    {
        string[] inputs;
        inputs = Console.ReadLine().Split(' ');
        int nbFloors = int.Parse(inputs[0]); // number of floors
        int width = int.Parse(inputs[1]); // width of the area
        int nbRounds = int.Parse(inputs[2]); // maximum number of rounds
        int exitFloor = int.Parse(inputs[3]); // floor on which the exit is found
        int exitPos = int.Parse(inputs[4]); // position of the exit on its floor
        int nbTotalClones = int.Parse(inputs[5]); // number of generated clones
        int nbAdditionalElevators = int.Parse(inputs[6]); // ignore (always zero)
        int nbElevators = int.Parse(inputs[7]); // number of elevators

        int[] elevatorFloor = new int[nbElevators];
        int[] elevatorPos = new int[nbElevators];
        for (int i = 0; i < nbElevators; i++)
        {
            inputs = Console.ReadLine().Split(' ');
            int elFloor = int.Parse(inputs[0]); // floor on which this elevator is found
            elevatorFloor [elFloor] = elFloor;
            elevatorPos[elFloor] = int.Parse(inputs[1]); // position of the elevator on its floor
        }

        // game loop
        while (true)
        {
            inputs = Console.ReadLine().Split(' ');
            int cloneFloor = int.Parse(inputs[0]); // floor of the leading clone
            int clonePos = int.Parse(inputs[1]); // position of the leading clone on its floor
            string direction = inputs[2]; // direction of the leading clone: LEFT or RIGHT


            string action = default;
            if(cloneFloor == exitFloor)
            {
                if (clonePos < exitPos && direction == "LEFT")
                {
                    action = "BLOCK";
                }
                else if (clonePos > exitPos && direction == "RIGHT")
                {
                    action = "BLOCK";
                }
                else
                {
                    action = "WAIT";
                }
            }
            else if (cloneFloor != exitFloor && cloneFloor > -1)
            {
                if (clonePos < elevatorPos[cloneFloor] && direction == "LEFT")
                {
                    action = "BLOCK";
                }
                else if (clonePos > elevatorPos[cloneFloor] && direction == "RIGHT")
                {
                    action = "BLOCK";
                }
                else
                {
                    action = "WAIT";
                }
            }
            else 
            {
                action = "WAIT";
            }
            

            Console.WriteLine(action); // action: WAIT or BLOCK

        }
    }
}
